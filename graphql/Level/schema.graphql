type Level {
    id: ID!
    nama: String!
    created_at: DateTime
    updated_at: DateTime
    deleted_at: DateTime
}

input CreateLevelInput {
    nama: String!
}

input UpdateLevelInput {
    id: ID!
    nama: String
}

extend type Query {
    allLevel: [Level!]!
    @all(model: "App\\Models\\Level\\Levels")

    level(id: ID! @eq(key: "id")): Level
    @find(model: "App\\Models\\Level\\Levels")

    levelByNama(nama: String! @where(operator: "like", key: "nama")): [Level!]!
    @all    (model: "App\\Models\\Level\\Levels")

    allLevelArsip: [Level!]!
    @field(resolver: "App\\GraphQL\\Level\\Queries\\LevelQuery@allLevelArsip")
}

extend type Mutation {
    createLevel(input: CreateLevelInput! @spread): Level
    @create(model: "App\\Models\\Level\\Levels")

    updateLevel(input: UpdateLevelInput! @spread): Level
    @update(model: "App\\Models\\Level\\Levels")

    deleteLevel(id: ID! @eq(key: "id")): Level
    @delete(model: "App\\Models\\Level\\Levels")

    restoreLevel(id: ID!): Level
    @field(resolver: "App\\GraphQL\\Level\\Mutations\\LevelMutation@restore")

    forceDeleteLevel(id: ID!): Level
    @field(resolver: "App\\GraphQL\\Level\\Mutations\\LevelMutation@forceDelete")
   
}   